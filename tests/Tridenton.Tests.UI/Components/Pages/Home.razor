@page "/"
@using System.ComponentModel.DataAnnotations
@using Tridenton.Core
@using Tridenton.Core.UI.Models

<PageTitle>Home</PageTitle>

<UISection>
    <UIColumn Class="gap">
        <UIDatagrid T="FormTestModel" Variant="UIDatagridVariant.MultiSelect" Handler="GetTestModelsAsync">
            <TableHeaders>
                <th>Email</th>
                <th>Password</th>
            </TableHeaders>
            
            <RowTemplate>
                <td>@context.Email</td>
                <td>@context.Password</td>
            </RowTemplate>
            
            <Actions>
                
            </Actions>
        </UIDatagrid>
        
        <UIColumn FlexVariant="UIFlexVariant.AlignItemsCenter">
            <UIRow Class="gap" FlexVariant="UIFlexVariant.AlignItemsCenter">
                <p class="tridenton-ui-text-extra-light">Extra Light Text</p>
                <p class="tridenton-ui-text-extra-light-italic">Extra Light Text Italic</p>
            </UIRow>
            <UIRow Class="gap" FlexVariant="UIFlexVariant.AlignItemsCenter">
                <p class="tridenton-ui-text-light">Light Text</p>
                <p class="tridenton-ui-text-light-italic">Light Text Italic</p>
            </UIRow>
            <UIRow Class="gap" FlexVariant="UIFlexVariant.AlignItemsCenter">
                <p>Regular Text</p>
                <p class="tridenton-ui-text-italic">Italic Text</p>
            </UIRow>
            <UIRow Class="gap" FlexVariant="UIFlexVariant.AlignItemsCenter">
                <p class="tridenton-ui-text-semi-bold">Semi Bold Text</p>
                <p class="tridenton-ui-text-semi-bold-italic">Semi Bold Text Italic</p>
            </UIRow>
            <UIRow Class="gap" FlexVariant="UIFlexVariant.AlignItemsCenter">
                <p class="tridenton-ui-text-bold">Bold Text</p>
                <p class="tridenton-ui-text-bold-italic">Bold Text Italic</p>
            </UIRow>
            <UIRow Class="gap" FlexVariant="UIFlexVariant.AlignItemsCenter">
                <p class="tridenton-ui-text-black">Black Text</p>
                <p class="tridenton-ui-text-black-italic">Black Text Italic</p>
            </UIRow>
        </UIColumn>
        
        <UIForm TModel="FormTestModel" Model="_formTestModelInstance" Header="Test">
            <HeaderTemplate>
                <UIRow FlexVariant="UIFlexVariant.AlignItemsCenter | UIFlexVariant.JustifyContentSpaceBetween">
                    <UIFormDefaultHeader Header="Test"/>
                    <UIButton Variant="UIButtonVariant.Primary" Text="Test">
                        <UIAddIcon/>
                    </UIButton>
                </UIRow>
            </HeaderTemplate>
            <ContentTemplate>
                <UIFormField Label="Email" Description="Email used during registration">
                    <InputText type="email" @bind-Value="_formTestModelInstance.Email" placeholder="example@test.com"/>
                </UIFormField>
                <UIFormField Label="Password" Description="Password used during registration">
                    <InputText type="password" @bind-Value="_formTestModelInstance.Password" placeholder="Enter your password"/>
                </UIFormField>
            </ContentTemplate>
        </UIForm>

        <UIRow Class="gap" FlexVariant="UIFlexVariant.AlignItemsCenter">
            <UIButton Variant="UIButtonVariant.Primary" Text="Download" OnClick="TestBtnClickAsync">
                <UIDownloadIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.Primary" Text="Upload">
                <UIUploadIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.Primary" Text="Add">
                <UIAddIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.Primary" Text="Refresh">
                <UIRefreshIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.Primary" Text="Search">
                <UISearchIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.Primary" Text="Settings">
                <UISettingsIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.Primary" Text="Close">
                <UICloseIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.Primary" Text="Delete">
                <UIDeleteIcon/>
            </UIButton>
        </UIRow>

        <UIRow Class="gap" FlexVariant="UIFlexVariant.AlignItemsCenter">
            <UIButton Variant="UIButtonVariant.Default" Text="Download" OnClick="TestBtnClickAsync">
                <UIDownloadIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.Default" Text="Upload">
                <UIUploadIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.Default" Text="Add">
                <UIAddIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.Default" Text="Refresh">
                <UIRefreshIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.Default" Text="Search">
                <UISearchIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.Default" Text="Settings">
                <UISettingsIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.Default" Text="Close">
                <UICloseIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.Default" Text="Delete">
                <UIDeleteIcon/>
            </UIButton>
        </UIRow>

        <UIRow Class="gap" FlexVariant="UIFlexVariant.AlignItemsCenter">
            <UIButton Variant="UIButtonVariant.Default" Text="Download" Disabled="true">
                <UIDownloadIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.Default" Text="Upload" Disabled="true">
                <UIUploadIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.Default" Text="Add" Disabled="true">
                <UIAddIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.Default" Text="Refresh" Disabled="true">
                <UIRefreshIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.Default" Text="Search" Disabled="true">
                <UISearchIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.Default" Text="Settings" Disabled="true">
                <UISettingsIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.Primary" Text="Close" Disabled="true">
                <UICloseIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.Default" Text="Delete" Disabled="true">
                <UIDeleteIcon/>
            </UIButton>
        </UIRow>

        <UIRow Class="gap" FlexVariant="UIFlexVariant.AlignItemsCenter">
            <UIButton Variant="UIButtonVariant.Icon" Text="Download">
                <UIDownloadIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.Icon" Text="Upload">
                <UIUploadIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.Icon" Text="Add">
                <UIAddIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.Icon" Text="Refresh">
                <UIRefreshIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.Icon" Text="Search">
                <UISearchIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.Icon" Text="Settings">
                <UISettingsIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.Icon" Text="Close">
                <UICloseIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.Icon" Text="Previous page">
                <UIPreviousPageIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.Icon" Text="Next page">
                <UINextPageIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.Icon" Text="Info">
                <UIInfoIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.Icon" Text="Toggle">
                <UIToggleIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.Icon" Text="Copy">
                <UICopyIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.Icon" Text="Delete">
                <UIDeleteIcon/>
            </UIButton>
        </UIRow>

        <UIRow Class="gap" FlexVariant="UIFlexVariant.AlignItemsCenter">
            <UIButton Variant="UIButtonVariant.Icon" Text="Download" Disabled="true">
                <UIDownloadIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.Icon" Text="Upload" Disabled="true">
                <UIUploadIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.Icon" Text="Add" Disabled="true">
                <UIAddIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.Icon" Text="Refresh" Disabled="true">
                <UIRefreshIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.Icon" Text="Search" Disabled="true">
                <UISearchIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.Icon" Text="Settings" Disabled="true">
                <UISettingsIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.Icon" Text="Close" Disabled="true">
                <UICloseIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.Icon" Text="Previous page" Disabled="true">
                <UIPreviousPageIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.Icon" Text="Next page" Disabled="true">
                <UINextPageIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.Icon" Text="Info" Disabled="true">
                <UIInfoIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.Icon" Text="Toggle" Disabled="true">
                <UIToggleIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.Icon" Text="Copy" Disabled="true">
                <UICopyIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.Icon" Text="Delete" Disabled="true">
                <UIDeleteIcon/>
            </UIButton>
        </UIRow>

        <UIRow Class="gap" FlexVariant="UIFlexVariant.AlignItemsCenter">
            <UIDownloadIcon/>
            <UIUploadIcon/>
            <UIAddIcon/>
            <UIRefreshIcon/>
            <UISearchIcon/>
            <UISettingsIcon/>
            <UICloseIcon/>
            <UIPreviousPageIcon/>
            <UINextPageIcon/>
            <UIInfoIcon/>
            <UIToggleIcon/>
            <UICopyIcon/>
            <UIDeleteIcon/>
        </UIRow>
    </UIColumn>
</UISection>

@* background: #0F141A; *@

<UISection Style="background: #232426">
    <UIColumn Class="gap">
        <UIRow Class="gap" FlexVariant="UIFlexVariant.AlignItemsCenter">
            <UIButton Variant="UIButtonVariant.Primary" Text="Download">
                <UIDownloadIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.Primary" Text="Upload">
                <UIUploadIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.Primary" Text="Add">
                <UIAddIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.Primary" Text="Refresh">
                <UIRefreshIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.Primary" Text="Search">
                <UISearchIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.Primary" Text="Settings">
                <UISettingsIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.Primary" Text="Close">
                <UICloseIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.Primary" Text="Delete">
                <UIDeleteIcon/>
            </UIButton>
        </UIRow>

        <UIRow Class="gap" FlexVariant="UIFlexVariant.AlignItemsCenter">
            <UIButton Variant="UIButtonVariant.Default" Text="Download">
                <UIDownloadIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.Default" Text="Upload">
                <UIUploadIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.Default" Text="Add">
                <UIAddIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.Default" Text="Refresh">
                <UIRefreshIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.Default" Text="Search">
                <UISearchIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.Default" Text="Settings">
                <UISettingsIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.Default" Text="Close">
                <UICloseIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.Default" Text="Delete">
                <UIDeleteIcon/>
            </UIButton>
        </UIRow>

        <UIRow Class="gap" FlexVariant="UIFlexVariant.AlignItemsCenter">
            <UIButton Variant="UIButtonVariant.Default" Text="Download" Disabled="true">
                <UIDownloadIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.Default" Text="Upload" Disabled="true">
                <UIUploadIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.Default" Text="Add" Disabled="true">
                <UIAddIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.Default" Text="Refresh" Disabled="true">
                <UIRefreshIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.Default" Text="Search" Disabled="true">
                <UISearchIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.Default" Text="Settings" Disabled="true">
                <UISettingsIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.Default" Text="Close" Disabled="true">
                <UICloseIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.Default" Text="Delete" Disabled="true">
                <UIDeleteIcon/>
            </UIButton>
        </UIRow>

        <UIRow Class="gap" FlexVariant="UIFlexVariant.AlignItemsCenter">
            <UIButton Variant="UIButtonVariant.IconInverted" Text="Download">
                <UIDownloadIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.IconInverted" Text="Upload">
                <UIUploadIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.IconInverted" Text="Add">
                <UIAddIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.IconInverted" Text="Refresh">
                <UIRefreshIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.IconInverted" Text="Search">
                <UISearchIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.IconInverted" Text="Settings">
                <UISettingsIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.IconInverted" Text="Close">
                <UICloseIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.IconInverted" Text="Next page">
                <UIPreviousPageIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.IconInverted" Text="Next page">
                <UINextPageIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.IconInverted" Text="Info">
                <UIInfoIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.IconInverted" Text="Toggle">
                <UIToggleIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.IconInverted" Text="Copy">
                <UICopyIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.IconInverted" Text="Delete">
                <UIDeleteIcon/>
            </UIButton>
        </UIRow>

        <UIRow Class="gap" FlexVariant="UIFlexVariant.AlignItemsCenter">
            <UIButton Variant="UIButtonVariant.IconInverted" Text="Download" Disabled="true">
                <UIDownloadIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.IconInverted" Text="Upload" Disabled="true">
                <UIUploadIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.IconInverted" Text="Add" Disabled="true">
                <UIAddIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.IconInverted" Text="Refresh" Disabled="true">
                <UIRefreshIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.IconInverted" Text="Search" Disabled="true">
                <UISearchIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.IconInverted" Text="Settings" Disabled="true">
                <UISettingsIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.IconInverted" Text="Close" Disabled="true">
                <UICloseIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.IconInverted" Text="Previous page" Disabled="true">
                <UIPreviousPageIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.IconInverted" Text="Next page" Disabled="true">
                <UINextPageIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.IconInverted" Text="Info" Disabled="true">
                <UIInfoIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.IconInverted" Text="Toggle" Disabled="true">
                <UIToggleIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.IconInverted" Text="Copy" Disabled="true">
                <UICopyIcon/>
            </UIButton>

            <UIButton Variant="UIButtonVariant.IconInverted" Text="Delete" Disabled="true">
                <UIDeleteIcon/>
            </UIButton>
        </UIRow>

        <UIRow Class="gap" FlexVariant="UIFlexVariant.AlignItemsCenter">
            <UIDownloadIcon Variant="UIIconVariant.Inverted"/>
            <UIUploadIcon Variant="UIIconVariant.Inverted"/>
            <UIAddIcon Variant="UIIconVariant.Inverted"/>
            <UIRefreshIcon Variant="UIIconVariant.Inverted"/>
            <UISearchIcon Variant="UIIconVariant.Inverted"/>
            <UISettingsIcon Variant="UIIconVariant.Inverted"/>
            <UICloseIcon Variant="UIIconVariant.Inverted"/>
            <UIPreviousPageIcon Variant="UIIconVariant.Inverted"/>
            <UINextPageIcon Variant="UIIconVariant.Inverted"/>
            <UIInfoIcon Variant="UIIconVariant.Inverted"/>
            <UIToggleIcon Variant="UIIconVariant.Inverted"/>
            <UICopyIcon Variant="UIIconVariant.Inverted"/>
            <UIDeleteIcon Variant="UIIconVariant.Inverted"/>
        </UIRow>
    </UIColumn>
</UISection>

<UILink Text="AWS Homepage" Href="https://amazon.com" External="true"/>
@* <UISelectInput T="string" OptionsProvider="SelectProviderAsync" Placeholder="Search for items"> *@
@*     <SelectedItemTemplate Context="item"> *@
@*         <span>@item</span> *@
@*     </SelectedItemTemplate> *@
@* *@
@*     <RowTemplate Context="item"> *@
@*         <p>@item</p> *@
@*     </RowTemplate> *@
@* </UISelectInput> *@

@code
{
    private readonly FormTestModel _formTestModelInstance = new();
    
    class FormTestModel
    {
        [Required(ErrorMessage = "Email is required")]
        [EmailAddress(ErrorMessage = "Email is invalid")]
        public string Email { get; set; }
        
        [Required(ErrorMessage = "Password is required")]
        public string Password { get; set; }

        public FormTestModel()
        {
            Email = string.Empty;
            Password = string.Empty;
        }
    }
    
    private async Task TestBtnClickAsync()
    {
        await Task.Delay(3_000);

        throw new Exception("Oh shit...");
    }

    private async Task<Result<PaginatedResponse<FormTestModel>>> GetTestModelsAsync(PaginatedRequest request)
    {
        await Task.Delay(3_000);

        var items = Enumerable
            .Range(0, 5)
            .Select(i => new FormTestModel
            {
                Email = $"test{i + 1}@gmail.com",
                Password = $"P@$$w0r|){i}",
            })
            .ToArray();

        return new PaginatedResponse<FormTestModel>()
        {
            Items = items,
            Size = 5,
            TotalRecordsCount = 1000,
            Page = 1,
        };
    }

    // private async ValueTask<IEnumerable<string>> SelectProviderAsync(SearchEventArgs args)
    // {
    //     return
    //     [
    //         "Test 1",
    //         "Test 2",
    //         "Test 3",
    //     ];
    // }
}