@using System.ComponentModel
@using System.Text
@using Microsoft.AspNetCore.Components.Forms
@inherits UIComponent

@switch (State)
{
    case UIThreeStatesCheckboxState.On:
        <InputCheckbox Value="@_onState" ValueExpression="() => _onState" ValueChanged="SwitchFormOnState" class="@ClassList" disabled="@Disabled" />
        break;
        
    case UIThreeStatesCheckboxState.Middle:
        <InputCheckbox Value="@_middleState" ValueExpression="() => _middleState" ValueChanged="SwitchFormMiddleState" class="@ClassList" disabled="@Disabled" />
        break;
        
    case UIThreeStatesCheckboxState.Off:
        <InputCheckbox Value="@_offState" ValueExpression="() => _offState" ValueChanged="SwitchFormOffState" class="@ClassList" disabled="@Disabled" />
        break;
        
    default:
        throw new InvalidEnumArgumentException();
}

@code
{
    [Parameter, EditorRequired]
    public UIThreeStatesCheckboxState State { get; set; }
    
    [Parameter]
    public bool Disabled { get; set; }
    
    [Parameter] public EventCallback SwitchFormOnState { get; set; }
    
    [Parameter] public EventCallback SwitchFormMiddleState { get; set; }
    
    [Parameter] public EventCallback SwitchFormOffState { get; set; }

    private bool _onState = true;
    private bool _middleState = true;
    private bool _offState = false;
    
    protected override string GetUIComponentClass()
    {
        var strBuilder = new StringBuilder("tridenton-ui-three-states-checkbox");

        if (State == UIThreeStatesCheckboxState.Middle)
        {
            strBuilder.Append(" middle-state");
        }

        return strBuilder.ToString();
    }
}